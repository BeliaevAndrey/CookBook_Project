services:
  web:
    build: ./recipes
    user: "1000:1000"
    command: gunicorn recipes.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - /large/data4/cookbook/static:/app/static
      - /large/data4/cookbook/media:/app/media
      - /large/data4/cookbook/log:/app/log
    env_file:
      - .env
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    user: "999:999"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - /large/data4/cookbook/postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    build: ./nginx
    volumes:
      - /large/data4/cookbook/static:/app/static
      - /large/data4/cookbook/media:/app/media
    ports:
      - "127.0.0.1:80:80"
    depends_on:
      - web
    restart: unless-stopped

